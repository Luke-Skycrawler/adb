#include "autogen.cuh"

namespace autogen {


    // This function was generated by the Symbolic Math Toolbox version 8.3.
    // 10-Jun-2019 18:02:37
    __device__ void point_line_distance_gradient_3D(
        float v01,
        float v02,
        float v03,
        float v11,
        float v12,
        float v13,
        float v21,
        float v22,
        float v23,
        float g[9])
    {
        float t17, t18, t19, t20, t21, t22, t23, t24, t25, t42, t44, t45, t46,
            t43, t50, t51, t52;

        t17 = -v11 + v01;
        t18 = -v12 + v02;
        t19 = -v13 + v03;
        t20 = -v21 + v01;
        t21 = -v22 + v02;
        t22 = -v23 + v03;
        t23 = -v21 + v11;
        t24 = -v22 + v12;
        t25 = -v23 + v13;
        t42 = 1.0 / ((t23 * t23 + t24 * t24) + t25 * t25);
        t44 = t17 * t21 + -(t18 * t20);
        t45 = t17 * t22 + -(t19 * t20);
        t46 = t18 * t22 + -(t19 * t21);
        t43 = t42 * t42;
        t50 = (t44 * t44 + t45 * t45) + t46 * t46;
        t51 = (v11 * 2.0 + -(v21 * 2.0)) * t43 * t50;
        t52 = (v12 * 2.0 + -(v22 * 2.0)) * t43 * t50;
        t43 = (v13 * 2.0 + -(v23 * 2.0)) * t43 * t50;
        g[0] = t42 * (t24 * t44 * 2.0 + t25 * t45 * 2.0);
        g[1] = -t42 * (t23 * t44 * 2.0 - t25 * t46 * 2.0);
        g[2] = -t42 * (t23 * t45 * 2.0 + t24 * t46 * 2.0);
        g[3] = -t51 - t42 * (t21 * t44 * 2.0 + t22 * t45 * 2.0);
        g[4] = -t52 + t42 * (t20 * t44 * 2.0 - t22 * t46 * 2.0);
        g[5] = -t43 + t42 * (t20 * t45 * 2.0 + t21 * t46 * 2.0);
        g[6] = t51 + t42 * (t18 * t44 * 2.0 + t19 * t45 * 2.0);
        g[7] = t52 - t42 * (t17 * t44 * 2.0 - t19 * t46 * 2.0);
        g[8] = t43 - t42 * (t17 * t45 * 2.0 + t18 * t46 * 2.0);
    }


    // This function was generated by the Symbolic Math Toolbox version 8.3.
    // 10-Jun-2019 18:02:39
    __device__ void point_line_distance_hessian_3D(
        float v01,
        float v02,
        float v03,
        float v11,
        float v12,
        float v13,
        float v21,
        float v22,
        float v23,
        float H[81])
    {
        float t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t35,
            t36, t37, t50, t51, t52, t53, t54, t55, t56, t62, t70, t71, t75,
            t79, t80, t84, t88, t38, t39, t40, t41, t42, t43, t44, t46, t48,
            t57, t58, t60, t63, t65, t67, t102, t103, t104, t162, t163, t164,
            t213, t214, t215, t216, t217, t218, t225, t226, t227, t229, t230,
            t311, t231, t232, t233, t234, t235, t236, t237, t238, t239, t240,
            t245, t279, t281, t282, t283, t287, t289, t247, t248, t249, t250,
            t251, t252, t253, t293, t295, t299, t300, t303, t304, t294, t297,
            t301, t302;

        t17 = -v11 + v01;
        t18 = -v12 + v02;
        t19 = -v13 + v03;
        t20 = -v21 + v01;
        t21 = -v22 + v02;
        t22 = -v23 + v03;
        t23 = -v21 + v11;
        t24 = -v22 + v12;
        t25 = -v23 + v13;
        t26 = v11 * 2.0 + -(v21 * 2.0);
        t27 = v12 * 2.0 + -(v22 * 2.0);
        t28 = v13 * 2.0 + -(v23 * 2.0);
        t35 = t23 * t23;
        t36 = t24 * t24;
        t37 = t25 * t25;
        t50 = t17 * t21;
        t51 = t18 * t20;
        t52 = t17 * t22;
        t53 = t19 * t20;
        t54 = t18 * t22;
        t55 = t19 * t21;
        t56 = t17 * t20 * 2.0;
        t62 = t18 * t21 * 2.0;
        t70 = t19 * t22 * 2.0;
        t71 = t17 * t23 * 2.0;
        t75 = t18 * t24 * 2.0;
        t79 = t19 * t25 * 2.0;
        t80 = t20 * t23 * 2.0;
        t84 = t21 * t24 * 2.0;
        t88 = t22 * t25 * 2.0;
        t38 = t17 * t17 * 2.0;
        t39 = t18 * t18 * 2.0;
        t40 = t19 * t19 * 2.0;
        t41 = t20 * t20 * 2.0;
        t42 = t21 * t21 * 2.0;
        t43 = t22 * t22 * 2.0;
        t44 = t35 * 2.0;
        t46 = t36 * 2.0;
        t48 = t37 * 2.0;
        t57 = t50 * 2.0;
        t58 = t51 * 2.0;
        t60 = t52 * 2.0;
        t63 = t53 * 2.0;
        t65 = t54 * 2.0;
        t67 = t55 * 2.0;
        t102 = 1.0 / ((t35 + t36) + t37);
        t36 = t50 + -t51;
        t35 = t52 + -t53;
        t37 = t54 + -t55;
        t103 = t102 * t102;
        t104 = t102 * t102 * t102;
        t162 = -(t23 * t24 * t102 * 2.0);
        t163 = -(t23 * t25 * t102 * 2.0);
        t164 = -(t24 * t25 * t102 * 2.0);
        t213 = t18 * t36 * 2.0 + t19 * t35 * 2.0;
        t214 = t17 * t35 * 2.0 + t18 * t37 * 2.0;
        t215 = t21 * t36 * 2.0 + t22 * t35 * 2.0;
        t216 = t20 * t35 * 2.0 + t21 * t37 * 2.0;
        t217 = t24 * t36 * 2.0 + t25 * t35 * 2.0;
        t218 = t23 * t35 * 2.0 + t24 * t37 * 2.0;
        t35 = (t36 * t36 + t35 * t35) + t37 * t37;
        t225 = t17 * t36 * 2.0 + -(t19 * t37 * 2.0);
        t226 = t20 * t36 * 2.0 + -(t22 * t37 * 2.0);
        t227 = t23 * t36 * 2.0 + -(t25 * t37 * 2.0);
        t36 = t26 * t103;
        t229 = t36 * t213;
        t37 = t27 * t103;
        t230 = t37 * t213;
        t311 = t28 * t103;
        t231 = t311 * t213;
        t232 = t36 * t214;
        t233 = t37 * t214;
        t234 = t311 * t214;
        t235 = t36 * t215;
        t236 = t37 * t215;
        t237 = t311 * t215;
        t238 = t36 * t216;
        t239 = t37 * t216;
        t240 = t311 * t216;
        t214 = t36 * t217;
        t215 = t37 * t217;
        t216 = t311 * t217;
        t217 = t36 * t218;
        t245 = t37 * t218;
        t213 = t311 * t218;
        t279 = t103 * t35 * 2.0;
        t281 = t26 * t26 * t104 * t35 * 2.0;
        t282 = t27 * t27 * t104 * t35 * 2.0;
        t283 = t28 * t28 * t104 * t35 * 2.0;
        t287 = t26 * t27 * t104 * t35 * 2.0;
        t218 = t26 * t28 * t104 * t35 * 2.0;
        t289 = t27 * t28 * t104 * t35 * 2.0;
        t247 = t36 * t225;
        t248 = t37 * t225;
        t249 = t311 * t225;
        t250 = t36 * t226;
        t251 = t37 * t226;
        t252 = t311 * t226;
        t253 = t36 * t227;
        t35 = t37 * t227;
        t36 = t311 * t227;
        t293 = t102 * (t75 + t79) + t214;
        t295 = -(t102 * (t80 + t84)) + t213;
        t299 = t102 * ((t63 + t22 * t23 * 2.0) + -t60) + t217;
        t300 = t102 * ((t67 + t22 * t24 * 2.0) + -t65) + t245;
        t303 = -(t102 * ((t57 + t17 * t24 * 2.0) + -t58)) + t215;
        t304 = -(t102 * ((t60 + t17 * t25 * 2.0) + -t63)) + t216;
        t294 = t102 * (t71 + t75) + -t213;
        t297 = -(t102 * (t80 + t88)) + t35;
        t88 = -(t102 * (t84 + t88)) + -t214;
        t301 = t102 * ((t58 + t21 * t23 * 2.0) + -t57) + t253;
        t302 = t102 * ((t65 + t21 * t25 * 2.0) + -t67) + t36;
        t84 = t102 * ((t57 + t20 * t24 * 2.0) + -t58) + -t215;
        t80 = t102 * ((t60 + t20 * t25 * 2.0) + -t63) + -t216;
        t75 = -(t102 * ((t63 + t19 * t23 * 2.0) + -t60)) + -t217;
        t227 = -(t102 * ((t67 + t19 * t24 * 2.0) + -t65)) + -t245;
        t311 = ((-(t17 * t19 * t102 * 2.0) + t231) + -t232) + t218;
        t245 = ((-(t20 * t22 * t102 * 2.0) + t237) + -t238) + t218;
        t226 = ((-t102 * (t67 - t54 * 4.0) + t233) + t252) + -t289;
        t28 = ((-t102 * (t63 - t52 * 4.0) + t232) + -t237) + -t218;
        t27 = ((-t102 * (t58 - t50 * 4.0) + t247) + -t236) + -t287;
        t225 = ((-(t102 * (t65 + -(t55 * 4.0))) + t239) + t249) + -t289;
        t26 = ((-(t102 * (t60 + -(t53 * 4.0))) + t238) + -t231) + -t218;
        t103 = ((-(t102 * (t57 + -(t51 * 4.0))) + t250) + -t230) + -t287;
        t104 = (((-(t102 * (t56 + t62)) + t234) + t240) + t279) + -t283;
        t218 = (((-(t102 * (t56 + t70)) + t248) + t251) + t279) + -t282;
        t217 = (((-(t102 * (t62 + t70)) + -t229) + -t235) + t279) + -t281;
        t216 = t102 * (t71 + t79) + -t35;
        t215 = -(t102 * ((t58 + t18 * t23 * 2.0) + -t57)) + -t253;
        t214 = -(t102 * ((t65 + t18 * t25 * 2.0) + -t67)) + -t36;
        t213 = ((-(t17 * t18 * t102 * 2.0) + t230) + -t247) + t287;
        t37 = ((-(t20 * t21 * t102 * 2.0) + t236) + -t250) + t287;
        t36 = ((-(t18 * t19 * t102 * 2.0) + -t233) + -t249) + t289;
        t35 = ((-(t21 * t22 * t102 * 2.0) + -t239) + -t252) + t289;
        H[0] = t102 * (t46 + t48);
        H[1] = t162;
        H[2] = t163;
        H[3] = t88;
        H[4] = t84;
        H[5] = t80;
        H[6] = t293;
        H[7] = t303;
        H[8] = t304;
        H[9] = t162;
        H[10] = t102 * (t44 + t48);
        H[11] = t164;
        H[12] = t301;
        H[13] = t297;
        H[14] = t302;
        H[15] = t215;
        H[16] = t216;
        H[17] = t214;
        H[18] = t163;
        H[19] = t164;
        H[20] = t102 * (t44 + t46);
        H[21] = t299;
        H[22] = t300;
        H[23] = t295;
        H[24] = t75;
        H[25] = t227;
        H[26] = t294;
        H[27] = t88;
        H[28] = t301;
        H[29] = t299;
        H[30] = ((t235 * 2.0 + -t279) + t281) + t102 * (t42 + t43);
        H[31] = t37;
        H[32] = t245;
        H[33] = t217;
        H[34] = t27;
        H[35] = t28;
        H[36] = t84;
        H[37] = t297;
        H[38] = t300;
        H[39] = t37;
        H[40] = ((t251 * -2.0 + -t279) + t282) + t102 * (t41 + t43);
        H[41] = t35;
        H[42] = t103;
        H[43] = t218;
        H[44] = t226;
        H[45] = t80;
        H[46] = t302;
        H[47] = t295;
        H[48] = t245;
        H[49] = t35;
        H[50] = ((t240 * -2.0 + -t279) + t283) + t102 * (t41 + t42);
        H[51] = t26;
        H[52] = t225;
        H[53] = t104;
        H[54] = t293;
        H[55] = t215;
        H[56] = t75;
        H[57] = t217;
        H[58] = t103;
        H[59] = t26;
        H[60] = ((t229 * 2.0 + -t279) + t281) + t102 * (t39 + t40);
        H[61] = t213;
        H[62] = t311;
        H[63] = t303;
        H[64] = t216;
        H[65] = t227;
        H[66] = t27;
        H[67] = t218;
        H[68] = t225;
        H[69] = t213;
        H[70] = ((t248 * -2.0 + -t279) + t282) + t102 * (t38 + t40);
        H[71] = t36;
        H[72] = t304;
        H[73] = t214;
        H[74] = t294;
        H[75] = t28;
        H[76] = t226;
        H[77] = t104;
        H[78] = t311;
        H[79] = t36;
        H[80] = ((t234 * -2.0 + -t279) + t283) + t102 * (t38 + t39);
    }

} // namespace autogen
